#
# ~/.bashrc-personal

# add this to bottom of .bashrc
# [[ -f ~/.bashrc-personal ]] && . ~/.bashrc-personal

#if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
#    if [ -f /etc/profile.d/vte.sh ]; then
#        source /etc/profile.d/vte.sh
#    else
#        source /etc/profile.d/vte-2.91.sh
#    fi
#fi

# colorize LESS
export LESS_TERMCAP_mb=$'\e[1;36m'
export LESS_TERMCAP_md=$'\e[1;36m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

# shopt
shopt -s autocd         # change to named directory
shopt -s cdspell        # autocorrects cd misspellings
shopt -s cmdhist        # save multi-line commands in history as single line
shopt -s dotglob
shopt -s histappend     # do not overwrite history
shopt -s expand_aliases # expand aliases
shopt -s checkwinsize   # updates LINES and COLUMNS on window resize
shopt -s globstar       # allows pattern "**" expands to recursively match all files and subdirectories

# I'm just used to this mode
set -o emacs

# disable Ctrl-S and Ctrl-Q
stty stop ''
stty start ''
stty -ixon
stty -ixoff

# manage dotfiles with git repo
# idealy create a bare git repo
#https://harfangk.github.io/2016/09/18/manage-dotfiles-with-a-git-bare-repository.html
#git clone --bare git@github.com:satrac/dotfiles.git .dotfiles
#alias dotfiles="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME"
#echo 'alias dotfiles="/usr/bin/git --git-dir=$HOME/.dotfiles --work-tree=$HOME"' >> $HOME/.bash_aliases
#source ~/.bash_aliases
#echo ".dotfiles" >> .gitignore
#dotfiles checkout --force
#dotfiles config --local status.showUntrackedFiles no

# source vulkan
if [ -f "$HOME/vulkan/1.3.243.0/setup-env.sh" ]; then
    source "$HOME/vulkan/1.3.243.0/setup-env.sh"
fi

# source gitcompletion
[[ -f .git-completion.bash ]] && source .git-completion.bash

# source kubectl completion
[[ -f /usr/bin/kubectl ]] && /usr/bin/kubectl completion bash | bash

# source cargo
[[ -f "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"

# source perlbrew
[[ -f "$HOME/perl5/perlbrew/etc/bashrc" ]] && source $HOME/perl5/perlbrew/etc/bashrc

# source rakubrew
[[ -f "$HOME/.rakubrew/bin/rakubrew" ]] && eval "$($HOME/.rakubrew/bin/rakubrew init Bash)"

alias n="nvim"

# Neovim config switcher
alias nvim-chad="NVIM_APPNAME=NvChad nvim"
alias nvim-astro="NVIM_APPNAME=AstroNvim nvim"
alias nvim-lazy="NVIM_APPNAME=LazyVim nvim"
alias nvim-kick="NVIM_APPNAME=kickstart nvim"
alias nvim-lunar="lvim"
nvims() {
  items=("default" "NvChad" "LazyVim" "AstroNvim" "kickstart" "lunarvim")
  config=$(printf "%s\n" "${items[@]}" | fzf --prompt=" Neovim Config  " --height=~50% --layout=reverse --border --exit-0)
  if [[ -z $config ]]; then
    echo "Nothing selected"
    return 0
  elif [[ $config == "default" ]]; then
    config=""
    alias n="nvim"
  elif [[ $config == "lunarvim" ]]; then
    config=""
    alias n="lvim"
    lvim $@
    return 0
  else
    alias n="NVIM_APPNAME=${config} nvim"
  fi
#  alias n="NVIM_APPNAME=${config} nvim"
  NVIM_APPNAME=$config nvim $@
}

bind -x '"\C-n": nvims'


# display system information
#if [[ -f /usr/bin/fastfetch ]]; then
#    fastfetch
#elif [[ -f $HOME/.cargo/bin/macchina ]]; then
#    macchina
#elif [[ -f /usr/bin/neofetch ]]; then
#    neofetch
#fi
